// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../backend/src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  customer_id Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)
  email       String  @unique @db.VarChar(100)
  address     String? @db.VarChar(100)
  phone       String? @db.VarChar(15)

  carts Cart[] // 1:N relación con Cart
}

model Clothing {
  clothing_id Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)
  description String? @db.Text
  price       Decimal @db.Decimal(8, 2)
  stock       Int
  image_url   String? @db.VarChar(255)

  myths     Myth[] // 1:N relación con Myth
  cartItems CartItem[] // 1:N relación con CartItem
}

model Myth {
  myth_id     Int      @id @default(autoincrement())
  title       String   @db.VarChar(80)
  content     String   @db.Text
  clothing_id Int
  clothing    Clothing @relation(fields: [clothing_id], references: [clothing_id])
}

model Cart {
  cart_id     Int        @id @default(autoincrement())
  customer_id Int
  created_at  DateTime   @default(now())
  customer    Customer   @relation(fields: [customer_id], references: [customer_id])
  items       CartItem[]
}

model CartItem {
  cart_item_id Int @id @default(autoincrement())
  cart_id      Int
  clothing_id  Int
  quantity     Int

  cart     Cart     @relation(fields: [cart_id], references: [cart_id])
  clothing Clothing @relation(fields: [clothing_id], references: [clothing_id])
}
